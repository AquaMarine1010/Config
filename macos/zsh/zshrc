# Path to your oh-my-zsh installation.
USER=$(whoami)
export ZSH_DISABLE_COMPFIX=true
export ZSH=/Users/$USER/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="robbyrussell"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
    git
    zsh-autosuggestions
)

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

source $ZSH/oh-my-zsh.sh

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"


# 大文字小文字を共にマッチさせる
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'

# sudo の後ろでコマンド名を補完する
zstyle ':completion:*:sudo:*' command-path /usr/local/sbin /usr/local/bin \
                   /usr/sbin /usr/bin /sbin /bin /usr/X11R6/bin

# ps コマンドのプロセス名補完
zstyle ':completion:*:processes' command 'ps x -o pid,s,args'

# オプション
# 日本語ファイル名を表示可能にする
setopt print_eight_bit

# beep を無効にする
setopt no_beep

# フローコントロールを無効にする
setopt no_flow_control

# '#' 以降をコメントとして扱う
setopt interactive_comments

# ディレクトリ名だけでcdする
setopt auto_cd

# cd したら自動的にpushdする
setopt auto_pushd
# 重複したディレクトリを追加しない
setopt pushd_ignore_dups

# = の後はパス名として補完する
setopt magic_equal_subst

# 同時に起動したzshの間でヒストリを共有する
setopt share_history

# 同じコマンドをヒストリに残さない
setopt hist_ignore_all_dups

# ヒストリファイルに保存するとき、すでに重複したコマンドがあったら古い方を削除する
setopt hist_save_nodups

# スペースから始まるコマンド行はヒストリに残さない
setopt hist_ignore_space

# ヒストリに保存するときに余分なスペースを削除する
setopt hist_reduce_blanks


# 高機能なワイルドカード展開を使用する
setopt extended_glob

# cd+<Tab>でディレクトリがすでにスタックに含まれていればスタックに追加しない
setopt auto_pushd

# pushd したとき、ディレクトリがすでにスタックに含まれていればスタックに追加されない
setopt pushd_ignore_dups

# PYTHON pyenv
export PYENV_ROOT="$HOME/.pyenv"
export PATH="PYENV_ROOT/shims:$PATH"
eval "$(pyenv init -)"

# pip install libaray
# export PATH="$HOME/Library/Python/3.7/bin:$PATH"

# alias ipython='ipython --pylab'

# Go PATH
export GOPATH="$HOME/.go"
export PATH="$HOME/src/bin:/usr/local/go/bin:$GOPATH/bin:$PATH"

# Javascript
## node brew
export PATH=$HOME/.nodebrew/current/bin:$PATH

# terraform
export PATH="$HOME/.tfenv/bin:$PATH"

# tex
export PATH="/usr/local/texlive/2020/bin/x86_64-darwin/:$PATH"

# 補完
autoload -U compinit


#Google Cloud Platform
export CLOUDSDK_PYTHON=/usr/bin/python2.7

function peco-history-selection(){
    BUFFER=`\\history -n 1 | tail -r | awk '!a[$0]++' | peco`
    CURSOR=$#BUFFER
    zle reset-prompt
}

zle -N peco-history-selection
bindkey '^R' peco-history-selection

# auto complete
export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=13'

#GCP Service Account
# export GOOGLE_APPLICATION_CREDENTIALS=~/.config/gcloud/credentials/editor-iam.json
# export GOOGLE_ACCOUNT_INFO=~/.config/gcloud/configurations/config_default
export DYLD_LIBRARY_PATH=/usr/local/opt/openssl/lib

autoload -U +X bashcompinit && bashcompinit
complete -o nospace -C /usr/local/bin/terraform terraform

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/usr/local/src/google-cloud-sdk/path.zsh.inc' ]; then . '/usr/local/src/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/usr/local/src/google-cloud-sdk/completion.zsh.inc' ]; then . '/usr/local/src/google-cloud-sdk/completion.zsh.inc'; fi

#########################################################
#################snipet##################################
#########################################################

cdls (){
    \cd "$@" && ls
}

#########################################################
################Alias####################################
#########################################################
# System command
alias -g L='| less'
alias -g G='| grep'
alias cd='cdls'

# brew
alias b='brew'
alias bi='brew install'
alias bs='brew search'
alias bl='brew list'
alias bo='brew outdated'
alias bc='brew cleanup'
alias bup='brew update'
alias bug='brew upgrade'
alias bui='brew uninstall'
# git
# git treeの表示
alias gtree='git log --graph --branches --pretty="format:%C(yellow)%h%Creset %s %Cgreen(%an)%Creset %Cred%d%Creset"'

#emacs client
alias ec='emacsclient'

#AWS reagion set
alias virginia='export AWS_DEFAULT_REGION=us-east-1'
alias tokyo='export AWS_DEFAULT_REGION=ap-northeast-1'
alias oregon='export AWS_DEFAULT_REGION=us-west-2'
alias ohaio='export AWS_DEFAULT_REGION=us-east-2'

# kubectl alias
alias k='kubectl'
alias kg='kubectl get'
alias ke='kubectl exec -it'
alias ka='kubectl apply -f'
alias kd='kubectl delete -f'
alias kpo='kubectl get pod'
alias kde='kubectl describe'
alias kbb='kubectl run busybox --image=busybox --rm -it --restart=Never --command --'

# helm alias
alias h='helm'
alias hs='helm show'
alias hl='helm list'
alias hr='helm repo'
alias hi='helm install'
alias hh='helm history'
alias hug='helm upgrade'
alias hrb='helm rollback'
alias hui='helm uninstall'

# GCP
alias gs='gsutil'
alias gc='gcloud'
alias gcm='gcloud compute'
alias gco='gcloud container'
alias gi='gcloud compute instances'
alias gn='gcloud compute networks'
alias gcs='gcloud compute ssh'
alias gup='gcloud components update'

## GCP AI
alias gai='gcloud ai-platform'
alias gmo='gcloud models'

## GCP container cluster
alias gcoi='gcloud container images'
alias gcoc='gcloud container clusters'
alias gcon='gcloud container node-pools'
alias gcoo='gcloud container operations'
alias gcos='gcloud container subnets'
alias gcoh='gcloud container hub'
alias gcob='gcloud container binauthz'

# terraform command
alias t='terraform'
alias ta='terraform apply'
alias tp='terraform plan'
alias td='terraform destroy'
alias ti='terraform init'
alias tw='terraform workspace'
alias twl='terraform workspace list'
alias tws='terraform workspace select'
alias twn='terraform workspace new'

# tfenv
alias tf='tfenv'
alias tfu='tfenv use'
alias tfl='tfenv list'
alias tfi='tfenv install'
alias tflr='tfenv list-remote'

# javascript
## reacr
alias rcp='create-react-app'
